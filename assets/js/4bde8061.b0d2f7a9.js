"use strict";(self.webpackChunkblindnet_dev=self.webpackChunkblindnet_dev||[]).push([[2104],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),r=n(4334),i="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(3117),r=n(7294),i=n(4334),o=n(2389),l=n(7392),s=n(7094),p=n(2466),c="tabList__CuJ",u="tabItem_LNqP";function d(e){var t,n,o=e.lazy,d=e.block,m=e.defaultValue,f=e.values,y=e.groupId,k=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,l.l)(b,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===m?m:null!=(t=null!=m?m:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:h[0].props.value;if(null!==v&&!b.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),T=N.tabGroupChoices,w=N.setTabGroupChoices,I=(0,r.useState)(v),S=I[0],j=I[1],x=[],E=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=y){var O=T[y];null!=O&&O!==S&&b.some((function(e){return e.value===O}))&&j(O)}var Z=function(e){var t=e.currentTarget,n=x.indexOf(t),a=b[n].value;a!==S&&(E(t),j(a),null!=y&&w(y,String(a)))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=x.indexOf(e.currentTarget)+1;n=null!=(a=x[r])?a:x[0];break;case"ArrowLeft":var i,o=x.indexOf(e.currentTarget)-1;n=null!=(i=x[o])?i:x[x.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},k)},b.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:function(e){return x.push(e)},onKeyDown:A,onFocus:Z,onClick:Z},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":S===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(h.filter((function(e){return e.props.value===S}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function m(e){var t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},8683:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return m}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),o=n(5488),l=n(5162),s=["components"],p={sidebar_position:2,title:"Quick Start",tags:["quickstart","tutorial"]},c="Quick Start Guide",u={unversionedId:"encryption/quickstart",id:"encryption/quickstart",title:"Quick Start",description:"While reading this quickstart guide you can download and follow the source code for a simple React front-end app with integrated blindnet client SDK from here.",source:"@site/docs/07-encryption/01-quickstart.mdx",sourceDirName:"07-encryption",slug:"/encryption/quickstart",permalink:"/docs/encryption/quickstart",draft:!1,editUrl:"https://github.com/blindnet-io/blindnet.dev/edit/main/docs/07-encryption/01-quickstart.mdx",tags:[{label:"quickstart",permalink:"/docs/tags/quickstart"},{label:"tutorial",permalink:"/docs/tags/tutorial"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Quick Start",tags:["quickstart","tutorial"]},sidebar:"tutorialSidebar",previous:{title:"Encryption",permalink:"/docs/encryption/"},next:{title:"Installation",permalink:"/docs/encryption/installation"}},d={},m=[{value:"Before you start",id:"before-you-start",level:3},{value:"<strong>STEP 1</strong>: Set-up",id:"step-1-set-up",level:2},{value:"Installation",id:"installation",level:3},{value:"Import",id:"import",level:3},{value:"Generate a user token for <strong>Alice</strong>",id:"generate-a-user-token-for-alice",level:3},{value:"Connect Alice to the blindnet encryption service",id:"connect-alice-to-the-blindnet-encryption-service",level:3},{value:"<strong>STEP 2</strong>: Encrypt a file",id:"step-2-encrypt-a-file",level:2},{value:"Initialize SDK for Bob",id:"initialize-sdk-for-bob",level:3},{value:"Encrypt a file",id:"encrypt-a-file",level:3},{value:"<strong>STEP 3</strong>: Decrypt a file",id:"step-3-decrypt-a-file",level:2}],f={toc:m};function y(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start-guide"},"Quick Start Guide"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"While reading this quickstart guide you can download and follow the source code for a simple React front-end app with integrated blindnet client SDK from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/blindnet-io/blindnet-client-js-example"},"here"),".")),(0,i.kt)("p",null,"In this quickstart guide, you will learn how to ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/encrypt"},"encrypt")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/decrypt"},"decrypt")," a file using the ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption"},"blindnet encryption client SDK"),".",(0,i.kt)("br",{parentName:"p"}),"\n","We assume two users exist - a user we know, ",(0,i.kt)("strong",{parentName:"p"},"Alice"),", and an anonymous user ",(0,i.kt)("strong",{parentName:"p"},"Bob"),". For the sake of simplicity, we'll act as both Alice and Bob. We will register a known user Alice to the blindnet encryption service, encrypt a file to her as an anonymous user Bob, and then decrypt the file as Alice."),(0,i.kt)("p",null,"You will learn how to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"set-up the blindnet encryption engine"),(0,i.kt)("li",{parentName:"ul"},"register Alice to the blindnet encryption service"),(0,i.kt)("li",{parentName:"ul"},"encrypt a file as Bob"),(0,i.kt)("li",{parentName:"ul"},"decrypt a file as Alice")),(0,i.kt)("h3",{id:"before-you-start"},"Before you start"),(0,i.kt)("p",null,"You first need to obtain authentication data (application id and key) from the blindnet ",(0,i.kt)("a",{parentName:"p",href:"https://dashboard.blindnet.io"},"dashboard"),"."),(0,i.kt)("p",null,"Refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/access-management/set-up"},"Access Management - Application Set Up")," for instructions."),(0,i.kt)("h2",{id:"step-1-set-up"},(0,i.kt)("strong",{parentName:"h2"},"STEP 1"),": Set-up"),(0,i.kt)("p",null,"To generate the authentication tokens, we will use a ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@blindnet/token-generator"},"dedicated token generator"),". In your production environment, you will need both ",(0,i.kt)("strong",{parentName:"p"},"client")," and ",(0,i.kt)("strong",{parentName:"p"},"server SDKs")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/managing_users_access#creating-user-tokens"},"generate")," the tokens on the server side."),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)("p",null,"To install the blindnet encryption library and the token generator:"),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -S @blindnet/sdk-javascript @blindnet/token-generator\n")))),(0,i.kt)("h3",{id:"import"},"Import"),(0,i.kt)("p",null,"Import the library to your project with:"),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { Blindnet } from '@blindnet/sdk-javascript';\nimport { createTempUserToken, createUserToken } from '@blindnet/token-generator';\n")))),(0,i.kt)("h3",{id:"generate-a-user-token-for-alice"},"Generate a user token for ",(0,i.kt)("strong",{parentName:"h3"},"Alice")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#authentication-token"},"Tokens")," are used to authenticate the users of your application to the blindnet encryption service. They can be used multiple times and should be regenerated when they expire using the same method."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"We use the ",(0,i.kt)("inlineCode",{parentName:"p"},"token generation")," library to generate the tokens. It should be only used for testing purposes and tokens should be ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/managing_users_access#creating-user-tokens"},"generated on the server")," in the production environment, after your user is authenticated.")),(0,i.kt)("p",null,"Use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#application-id"},"application id")," and key you obtained in ",(0,i.kt)("a",{parentName:"p",href:"#before-you-start"},"Before you start")," section."),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const appId = 'your_application_id';\nconst appKey = 'your_application_key';\nconst aliceId = 'alice';\nconst groupId = 'test-group';\nconst token = await createUserToken(aliceId, groupId, appId, appKey);\n")))),(0,i.kt)("p",null,"Specify the ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#testing-endpoint"},"testing endpoint")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/installation#initialization"},"initialize")," the library for Alice"),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const endpoint = 'https://test.blindnet.io';\nconst blindnet = Blindnet.init(token, endpoint);\n")))),(0,i.kt)("h3",{id:"connect-alice-to-the-blindnet-encryption-service"},"Connect Alice to the blindnet encryption service"),(0,i.kt)("p",null,"The blindnet encryption service can encrypt files with a particular destination (list of users or a ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#user-groups"},"user group"),") in mind. So in order to start encrypting, you first need to have some users (Alice in this case) that you've connected to the blindnet encryption service."),(0,i.kt)("p",null,"To connect a user to the blindnet encryption service, a ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#secret-value"},"secret value")," has to be provided. That value must only be known\nby the user (e.g. user's password). In that case, ",(0,i.kt)("strong",{parentName:"p"},"it's important not to use the same value to log-into your system and connect to the blindnet encryption service")," for which we provide a method ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/managing_users_access#splitting-secrets"},"deriveSecrets"),"."),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { appSecret, blindnetSecret } = await Blindnet.deriveSecrets(secret);\nawait blindnet.connect(blindnetSecret);\n")))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"appSecret")," as a password for the user to log into your system.")),(0,i.kt)("h2",{id:"step-2-encrypt-a-file"},(0,i.kt)("strong",{parentName:"h2"},"STEP 2"),": Encrypt a file"),(0,i.kt)("p",null,"After Alice has connected to the blindnet encryption service, data can be ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/encrypt"},"encrypted")," for her.\nWe will simulate an ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#anonymous-user"},"anonymous")," user Bob encrypting a file for Alice."),(0,i.kt)("h3",{id:"initialize-sdk-for-bob"},"Initialize SDK for Bob"),(0,i.kt)("p",null,"You need to initialize the library with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/references/glossary#temp-user-token"},"temporary token")," in order to encrypt the data. Pass the id of the group Alice belongs to in order to give permission to encrypt data for her."),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const token = await createTempUserToken(groupId, appId, appKey);\nconst blindnet = Blindnet.init(token, endpoint);\n")))),(0,i.kt)("h3",{id:"encrypt-a-file"},"Encrypt a file"),(0,i.kt)("p",null,"Obtain a file from the ",(0,i.kt)("inlineCode",{parentName:"p"},'<input type="file" id="file-pick>')," ",(0,i.kt)("inlineCode",{parentName:"p"},"HTML")," element and pass it to the ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/encrypt#encrypt"},"encrypt")," method. Add Alice as a recipient."),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const file = document.getElementById('file-pick').files[0];\nconst { encryptedData } = await blindnet.capture(data).forUser(aliceId).encrypt();\n")))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"encryptedData")," should be stored by you."),(0,i.kt)("h2",{id:"step-3-decrypt-a-file"},(0,i.kt)("strong",{parentName:"h2"},"STEP 3"),": Decrypt a file"),(0,i.kt)("p",null,"To ",(0,i.kt)("a",{parentName:"p",href:"/docs/encryption/decrypt#decrypt"},"decrypt")," a file, you only need ",(0,i.kt)("inlineCode",{parentName:"p"},"encryptedData"),"."),(0,i.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { data, metadata } = await blindnet.decrypt(encryptedData);\n")),(0,i.kt)("p",null,"There is a convenient library to save files ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eligrey/FileSaver.js"},"file-saver"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"saveAs(data, metadata.name);\n")))))}y.isMDXComponent=!0}}]);