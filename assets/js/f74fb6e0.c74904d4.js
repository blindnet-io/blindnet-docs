"use strict";(self.webpackChunkblindnet_dev=self.webpackChunkblindnet_dev||[]).push([[307],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return y}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(r),y=o,f=d["".concat(c,".").concat(y)]||d[y]||l[y]||i;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},363:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return l}});var n=r(3117),o=r(102),i=(r(7294),r(3905)),s=["components"],a={title:"Security",sidebar_position:3,tags:["how-it-works"]},c=void 0,p={unversionedId:"encryption/how_it_works/security",id:"encryption/how_it_works/security",title:"Security",description:"User private keys",source:"@site/docs/07-encryption/04-how_it_works/02-security.mdx",sourceDirName:"07-encryption/04-how_it_works",slug:"/encryption/how_it_works/security",permalink:"/docs/encryption/how_it_works/security",draft:!1,editUrl:"https://github.com/blindnet-io/blindnet.dev/edit/main/docs/07-encryption/04-how_it_works/02-security.mdx",tags:[{label:"how-it-works",permalink:"/docs/tags/how-it-works"}],version:"current",sidebarPosition:3,frontMatter:{title:"Security",sidebar_position:3,tags:["how-it-works"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/encryption/how_it_works/introduction"},next:{title:"Api reference",permalink:"/docs/encryption/api_reference/"}},u={},l=[{value:"User private keys",id:"user-private-keys",level:2},{value:"User passwords",id:"user-passwords",level:2}],d={toc:l};function y(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"user-private-keys"},"User private keys"),(0,i.kt)("p",null,"All user key pairs are always randomly generated. Before users' private keys are uploaded to blindnet servers, they are encrypted with a symmetric key derived from user passwords. This allows users to benefit from private data transfers using any browser or device, while protecting their private keys and ensuring the data transfer between any two users is end-to-end encrypted."),(0,i.kt)("h2",{id:"user-passwords"},"User passwords"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To allow your users to use only one password for both your application and blindnet, you must first ",(0,i.kt)("a",{parentName:"p",href:"../guides/managing_users_access#splitting-secrets"},"split")," their passwords (i.e., you must use user password to derive two secrets, one for your application and one for blindnet)."))),(0,i.kt)("p",null,"To provide seamless user experience in your application while preserving the highest level of data privacy for your users, your users can still input only one password for both authenticating on your application and securing blindnet private keys. However, it is important that under the hood you split this password into two secrets by using blindnet client SDK. This is needed because using the same secret in both your application and blindnet would give you access to user private keys. "),(0,i.kt)("p",null,"See our ",(0,i.kt)("a",{parentName:"p",href:"../guides/managing_users_access#splitting-secrets"},"documentation")," to see how to easily split user passwords with our SDKs."))}y.isMDXComponent=!0}}]);