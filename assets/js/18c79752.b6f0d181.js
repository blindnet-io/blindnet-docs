"use strict";(self.webpackChunkblindnet_dev=self.webpackChunkblindnet_dev||[]).push([[7488],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),d=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),k=d(r),m=n,c=k["".concat(o,".").concat(m)]||k[m]||u[m]||l;return r?a.createElement(c,i(i({ref:t},s),{},{components:r})):a.createElement(c,i({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var d=2;d<l;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},1391:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return u}});var a=r(3117),n=r(102),l=(r(7294),r(3905)),i=["components"],p={title:"PHP Server"},o="Encryption PHP Server Library v0.9.2",d={unversionedId:"encryption/api_reference/php-server",id:"encryption/api_reference/php-server",title:"PHP Server",description:"Installation",source:"@site/docs/07-encryption/99-api_reference/php-server.mdx",sourceDirName:"07-encryption/99-api_reference",slug:"/encryption/api_reference/php-server",permalink:"/docs/encryption/api_reference/php-server",draft:!1,editUrl:"https://github.com/blindnet-io/blindnet.dev/edit/develop/docs/07-encryption/99-api_reference/php-server.mdx",tags:[],version:"current",frontMatter:{title:"PHP Server"},sidebar:"tutorialSidebar",previous:{title:"Node.js Server",permalink:"/docs/encryption/api_reference/node-server"},next:{title:"Data Capture",permalink:"/docs/data-capture"}},s={},u=[{value:"Installation",id:"installation",level:2},{value:"Imports",id:"imports",level:2},{value:"Init",id:"init",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Return type",id:"return-type",level:4},{value:"createTempUserToken",id:"createtempusertoken",level:2},{value:"Parameters",id:"parameters-1",level:4},{value:"Return type",id:"return-type-1",level:4},{value:"createUserToken",id:"createusertoken",level:2},{value:"Return type",id:"return-type-2",level:4},{value:"forgetData",id:"forgetdata",level:2},{value:"Parameters",id:"parameters-2",level:4},{value:"Return type",id:"return-type-3",level:4},{value:"Errors",id:"errors",level:4},{value:"revokeAccess",id:"revokeaccess",level:2},{value:"Parameters",id:"parameters-3",level:4},{value:"Return type",id:"return-type-4",level:4},{value:"Errors",id:"errors-1",level:4},{value:"forgetUser",id:"forgetuser",level:2},{value:"Parameters",id:"parameters-4",level:4},{value:"Return type",id:"return-type-5",level:4},{value:"Errors",id:"errors-2",level:4},{value:"forgetGroup",id:"forgetgroup",level:2},{value:"Parameters",id:"parameters-5",level:4},{value:"Return type",id:"return-type-6",level:4},{value:"Errors",id:"errors-3",level:4}],k={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"encryption-php-server-library-v092"},"Encryption PHP Server Library v0.9.2"),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"composer require blindnet/blindnet-sdk-php\n")),(0,l.kt)("h2",{id:"imports"},"Imports"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'linenums="1"',linenums:'"1"'},"require 'vendor/autoload.php';\nuse Blindnet\\BlindnetSDKPHP\\Blindnet;\n")),(0,l.kt)("h2",{id:"init"},"Init"),(0,l.kt)("p",null,"Initializes blindnet server SDK."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"static function init(\n  string $appKey,\n  string $appId,\n  string $apiEndpoint = 'https://api.blindnet.io'\n): Blindnet\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$appKey"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-key"},"Application private key"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$appId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-id"},"Application ID"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$apiEndpoint"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Endpoint of the blindnet server. The default value is ",(0,l.kt)("inlineCode",{parentName:"td"},"https://api.blindnet.io"),". For testing, use ",(0,l.kt)("inlineCode",{parentName:"td"},"https://test.blindnet.io"),".")))),(0,l.kt)("h4",{id:"return-type"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Blindnet")),(0,l.kt)("h2",{id:"createtempusertoken"},"createTempUserToken"),(0,l.kt)("p",null,"Creates a ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#authentication-token"},"token")," for ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#anonymous-user"},"non-registered users")," of your application, usually data senders.\nWhen this token is used for ",(0,l.kt)("a",{parentName:"p",href:"/docs/encryption/encrypt"},"encrypting data"),", all users that belong to a specified ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#user-groups"},"group")," will have access to the encrypted data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function createTempUserToken(string $groupId): string\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$groupId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#user-groups"},"group")," for which the data is being encrypted.")))),(0,l.kt)("h4",{id:"return-type-1"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("h2",{id:"createusertoken"},"createUserToken"),(0,l.kt)("p",null,"Creates a ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#authentication-token"},"token")," for ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#registered-user"},"registered users")," of your application, usually data receivers."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function createUserToken(string $userId, string $groupId): string\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$userId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of a ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#registered-user"},"registered user"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$groupId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#user-groups"},"group")," to which a ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#registered-user"},"registered user")," belongs.")))),(0,l.kt)("h4",{id:"return-type-2"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("h2",{id:"forgetdata"},"forgetData"),(0,l.kt)("p",null,"Deletes the ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#encrypted-data-key"},"encrypted data key")," from blindnet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function forgetData(string $dataId)\n")),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$dataId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of a data to be deleted.")))),(0,l.kt)("h4",{id:"return-type-3"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bool")),(0,l.kt)("h4",{id:"errors"},"Errors"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AuthenticationError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#authentication-token"},"token"),", which further implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-id"},"application id")," or ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-key"},"application key"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BlindnetServiceError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies an error in the request to blindnet API.")))),(0,l.kt)("h2",{id:"revokeaccess"},"revokeAccess"),(0,l.kt)("p",null,"Deletes all ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#encrypted-data-key"},"encrypted data keys")," of a given user."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function revokeAccess(string $userId): bool\n")),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$userId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of a user to revoke access to the encrypted data.")))),(0,l.kt)("h4",{id:"return-type-4"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bool")),(0,l.kt)("h4",{id:"errors-1"},"Errors"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AuthenticationError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#authentication-token"},"token"),", which further implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-id"},"application id")," or ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-key"},"application key"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BlindnetServiceError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies an error in the request to blindnet API.")))),(0,l.kt)("h2",{id:"forgetuser"},"forgetUser"),(0,l.kt)("p",null,"Deletes a user from blindnet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function forgetUser(string $userId): bool\n")),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$userId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of a user to delete.")))),(0,l.kt)("h4",{id:"return-type-5"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bool")),(0,l.kt)("h4",{id:"errors-2"},"Errors"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AuthenticationError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#authentication-token"},"token"),", which further implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-id"},"application id")," or ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-key"},"application key"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BlindnetServiceError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies an error in the request to blindnet API.")))),(0,l.kt)("h2",{id:"forgetgroup"},"forgetGroup"),(0,l.kt)("p",null,"Deletes all ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#encrypted-data-key"},"encrypted data keys")," of a given user.",(0,l.kt)("br",{parentName:"p"}),"\n","Deletes all users that belong to the ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#user-groups"},"group")," and all their ",(0,l.kt)("a",{parentName:"p",href:"/docs/references/glossary#encrypted-data-key"},"encrypted data keys"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function forgetGroup(string $groupId): bool\n")),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"name"),(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"required"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"$groupId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of a group to delete.")))),(0,l.kt)("h4",{id:"return-type-6"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bool")),(0,l.kt)("h4",{id:"errors-3"},"Errors"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AuthenticationError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#authentication-token"},"token"),", which further implies invalid ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-id"},"application id")," or ",(0,l.kt)("a",{parentName:"td",href:"/docs/references/glossary#application-key"},"application key"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"BlindnetServiceError"),(0,l.kt)("td",{parentName:"tr",align:null},"Implies an error in the request to blindnet API.")))))}m.isMDXComponent=!0}}]);