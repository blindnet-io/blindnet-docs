"use strict";(self.webpackChunkblindnet_dev=self.webpackChunkblindnet_dev||[]).push([[9414],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),f=i,g=l["".concat(c,".").concat(f)]||l[f]||d[f]||a;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=l;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},4870:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),o=["components"],s={title:"Introduction",sidebar_position:1},c=void 0,u={unversionedId:"encryption/guides/introduction",id:"encryption/guides/introduction",title:"Introduction",description:"blindnet devkit encryption SDKs consists of client-side and server-side libraries for different languages and platforms.",source:"@site/docs/07-encryption/03-guides/01-introduction.mdx",sourceDirName:"07-encryption/03-guides",slug:"/encryption/guides/introduction",permalink:"/docs/encryption/guides/introduction",draft:!1,editUrl:"https://github.com/blindnet-io/blindnet.dev/edit/main/docs/07-encryption/03-guides/01-introduction.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/docs/encryption/guides/"},next:{title:"Installation",permalink:"/docs/encryption/guides/installation"}},p={},d=[],l={toc:d};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"blindnet devkit encryption SDKs")," consists of ",(0,a.kt)("strong",{parentName:"p"},"client-side")," and ",(0,a.kt)("strong",{parentName:"p"},"server-side")," libraries for different languages and platforms."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Server-side SDKs")," are used mainly for user authentication in blindnet by providing the api to generate the ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#creating-user-tokens"},"authentication tokens"),". Additionally, you can use it to ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#deleting-users"},"delete users")," and ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#deleting-encrypted-data-keys"},"encryption keys")," of your application."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Client-side SDKs")," are used for ",(0,a.kt)("a",{parentName:"p",href:"./encrypt"},"encryption")," and ",(0,a.kt)("a",{parentName:"p",href:"./decrypt"},"decryption")," of the data shared between users of your application. Other functionalities are e.g. ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#giving-access-to-other-users"},"sharing")," the encrypted data with other users."),(0,a.kt)("p",null,"In order to integrate blindnet to your application:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You need to integrate both ",(0,a.kt)("strong",{parentName:"li"},"client-side")," and ",(0,a.kt)("strong",{parentName:"li"},"server-side SDKs"),"."),(0,a.kt)("li",{parentName:"ol"},"You need a way to authenticate the users in your application. Users in blindnet are identified by a unique identifier which is ",(0,a.kt)("a",{parentName:"li",href:"./managing_users_access#creating-user-tokens"},"generated")," on your side. User's unique identifier is a part of the authentication token."),(0,a.kt)("li",{parentName:"ol"},"You need to maintain the ",(0,a.kt)("a",{parentName:"li",href:"../glossary#session"},"authenticated sessions")," with blindnet on the client-side for every user using the blindnet api. A session is identified by an ",(0,a.kt)("a",{parentName:"li",href:"./managing_users_access#creating-user-tokens"},"authentication token")," generated by the ",(0,a.kt)("strong",{parentName:"li"},"server-side SDK")," and passed to the ",(0,a.kt)("strong",{parentName:"li"},"client-side"),". Tokens have an expiry time so make sure to generate new ones after they expire.")))}f.isMDXComponent=!0}}]);