"use strict";(self.webpackChunkblindnet_dev=self.webpackChunkblindnet_dev||[]).push([[1353],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),u=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return a.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(p,".").concat(d)]||m[d]||s[d]||i;return n?a.createElement(f,o(o({ref:e},c),{},{components:n})):a.createElement(f,o({ref:e},c))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9748:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),o=["components"],l={title:"Setup & Deployment",sidebar_position:4,tags:["guide"]},p=void 0,u={unversionedId:"computation/run",id:"computation/run",title:"Setup & Deployment",description:"Refer to Usage section of the Privacy Computation Engine README on GitHub for more information about its setup, especially if your goal is to contribute or just test the service locally.",source:"@site/docs/03-computation/05-run.mdx",sourceDirName:"03-computation",slug:"/computation/run",permalink:"/docs/computation/run",draft:!1,editUrl:"https://github.com/blindnet-io/blindnet.dev/edit/develop/docs/03-computation/05-run.mdx",tags:[{label:"guide",permalink:"/docs/tags/guide"}],version:"current",sidebarPosition:4,frontMatter:{title:"Setup & Deployment",sidebar_position:4,tags:["guide"]},sidebar:"tutorialSidebar",previous:{title:"Compilation",permalink:"/docs/computation/compiler"},next:{title:"User Interfaces",permalink:"/docs/interfaces/"}},c={},s=[{value:"Environment",id:"environment",level:2},{value:"Java Runtime",id:"java-runtime",level:3},{value:"Database",id:"database",level:3},{value:"API Configuration",id:"api-configuration",level:3},{value:"Run",id:"run",level:2},{value:"Compiling from source",id:"compiling-from-source",level:2}],m={toc:s};function d(t){var e=t.components,n=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Refer to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/blindnet-io/privacy-computation-engine/#usage"},"Usage section")," of the Privacy Computation Engine README on GitHub for more information about its setup, especially if your goal is to contribute or just test the service locally.")),(0,i.kt)("h2",{id:"environment"},"Environment"),(0,i.kt)("h3",{id:"java-runtime"},"Java Runtime"),(0,i.kt)("p",null,"The PCE is built using Scala. It is therefore delivered as a jar file you can run on any Java Runtime Environment."),(0,i.kt)("admonition",{title:"Recommended JRE",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"We recommend using ",(0,i.kt)("a",{parentName:"p",href:"https://adoptium.net/installation"},"Eclipse Adoptium Temurin")," 8, 11, or 17."),(0,i.kt)("p",{parentName:"admonition"},"If you encounter any issue when using the PCE with another JRE, please open an issue in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/blindnet-io/privacy-computation-engine/issues/new"},"the associated repository"),".")),(0,i.kt)("h3",{id:"database"},"Database"),(0,i.kt)("p",null,"The PCE requires read-write access to a dedicated ",(0,i.kt)("a",{parentName:"p",href:"https://www.postgresql.org/"},"PostgreSQL")," database."),(0,i.kt)("p",null,"The connection to this database has to be configured via the following environment variables:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DB_URI"),(0,i.kt)("td",{parentName:"tr",align:null},"jdbc connection string"),(0,i.kt)("td",{parentName:"tr",align:null},"jdbc:postgresql://localhost:5432/pce"),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DB_USER"),(0,i.kt)("td",{parentName:"tr",align:null},"database user"),(0,i.kt)("td",{parentName:"tr",align:null},"postgres"),(0,i.kt)("td",{parentName:"tr",align:"left"})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DB_PASS"),(0,i.kt)("td",{parentName:"tr",align:null},"database user's password"),(0,i.kt)("td",{parentName:"tr",align:null},"mysecretpassword"),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h3",{id:"api-configuration"},"API Configuration"),(0,i.kt)("p",null,"The following variables can be used to configure the PCE API:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"API_HOST"),(0,i.kt)("td",{parentName:"tr",align:null},"HTTP host"),(0,i.kt)("td",{parentName:"tr",align:null},"localhost"),(0,i.kt)("td",{parentName:"tr",align:"left"},"0.0.0.0")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"API_PORT"),(0,i.kt)("td",{parentName:"tr",align:null},"HTTP port"),(0,i.kt)("td",{parentName:"tr",align:null},"80"),(0,i.kt)("td",{parentName:"tr",align:"left"},"9000")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"APP_CALLBACK_URI"),(0,i.kt)("td",{parentName:"tr",align:null},"callback api prefix"),(0,i.kt)("td",{parentName:"tr",align:null},"localhost:9000/v0"),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h2",{id:"run"},"Run"),(0,i.kt)("p",null,"The PCE service is delivered as a jar file you can directly execute on any JRE with  ",(0,i.kt)("inlineCode",{parentName:"p"},"java -jar <PCE build>"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"As the PCE is currently under active development, a jar build can only be obtained by compiling its source code.\nRefer to the ",(0,i.kt)("a",{parentName:"p",href:"#compiling-from-source"},"associated section")," for instructions.")),(0,i.kt)("p",null,"You'll also find a ready-to-use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/blindnet-io/privacy-computation-engine/blob/develop/Dockerfile"},"minimal Dockerfile")," in the associated GitHub repository."),(0,i.kt)("h2",{id:"compiling-from-source"},"Compiling from source"),(0,i.kt)("p",null,"To compile the PCE, you first need to install:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a JDK (see ",(0,i.kt)("a",{parentName:"li",href:"#java-runtime"},"Java Runtime"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.scala-sbt.org/1.x/docs/Setup.html"},"sbt"))),(0,i.kt)("p",null,"To build a new image of the PCE service from its source, clone the associated repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"clone git@github.com:blindnet-io/privacy-computation-engine.git\ncd privacy-computation-engine\n")),(0,i.kt)("p",null,"Then run the following ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt")," command to build a new ",(0,i.kt)("inlineCode",{parentName:"p"},"modules/core/target/scala-<scala version>/devkit_pce.jar")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sbt assembly\n")))}d.isMDXComponent=!0}}]);