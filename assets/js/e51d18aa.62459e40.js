"use strict";(self.webpackChunkblindnet_dev=self.webpackChunkblindnet_dev||[]).push([[5551],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return n?i.createElement(h,o(o({ref:t},d),{},{components:n})):i.createElement(h,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2991:function(e,t,n){n.d(t,{Z:function(){return k}});var i=n(7294),r=n(4334),a=n(3438),o=n(9960),s=n(3919),c=n(5999),l="cardContainer_fWXF",d="cardTitle_rnsV",u="cardDescription_PWke";function p(e){var t=e.href,n=e.children;return i.createElement(o.Z,{href:t,className:(0,r.Z)("card padding--lg",l)},n)}function m(e){var t=e.href,n=e.icon,a=e.title,o=e.description;return i.createElement(p,{href:t},i.createElement("h2",{className:(0,r.Z)("text--truncate",d),title:a},n," ",a),o&&i.createElement("p",{className:(0,r.Z)("text--truncate",u),title:o},o))}function h(e){var t=e.item,n=(0,a.Wl)(t);return n?i.createElement(m,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function f(e){var t,n=e.item,r=(0,s.Z)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",o=(0,a.xz)(null!=(t=n.docId)?t:void 0);return i.createElement(m,{href:n.href,icon:r,title:n.label,description:null==o?void 0:o.description})}function g(e){var t=e.item;switch(t.type){case"link":return i.createElement(f,{item:t});case"category":return i.createElement(h,{item:t});default:throw new Error("unknown item type "+JSON.stringify(t))}}function y(e){var t=e.className,n=(0,a.jA)();return i.createElement(k,{items:n.items,className:t})}function k(e){var t=e.items,n=e.className;if(!t)return i.createElement(y,e);var o=(0,a.MN)(t);return i.createElement("section",{className:(0,r.Z)("row",n)},o.map((function(e,t){return i.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},i.createElement(g,{item:e}))})))}},3466:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var i=n(3117),r=n(102),a=(n(7294),n(3905)),o=n(2991),s=n(3438),c=["components"],l={title:"Encryption",sidebar_position:1,tags:["introduction"]},d=void 0,u={unversionedId:"encryption/index",id:"encryption/index",title:"Encryption",description:"Blindnet offers a simple solution to enable data privacy and compliance with requirements in various data regulations, including GDPR and CCPA.",source:"@site/docs/07-encryption/index.mdx",sourceDirName:"07-encryption",slug:"/encryption/",permalink:"/docs/encryption/",draft:!1,editUrl:"https://github.com/blindnet-io/blindnet.dev/edit/develop/docs/07-encryption/index.mdx",tags:[{label:"introduction",permalink:"/docs/tags/introduction"}],version:"current",sidebarPosition:1,frontMatter:{title:"Encryption",sidebar_position:1,tags:["introduction"]},sidebar:"tutorialSidebar",previous:{title:"Connection to a Storage Service",permalink:"/docs/storage/connection"},next:{title:"Quick Start",permalink:"/docs/encryption/quickstart"}},p={},m=[{value:"What it does",id:"what-it-does",level:3},{value:"How to use it",id:"how-to-use-it",level:3},{value:"What is the difference between <code>Blindnet.init(token)</code> and <code>blindnet.connect(blindnetSecret)</code>",id:"what-is-the-difference-between-blindnetinittoken-and-blindnetconnectblindnetsecret",level:3},{value:"Overview",id:"overview",level:2}],h={toc:m};function f(e){var t=e.components,l=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,i.Z)({},h,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Blindnet offers a simple solution to enable data privacy and compliance with requirements in various data regulations, including GDPR and CCPA."),(0,a.kt)("p",null,"Beyond compliance, we provide software developers with a service to minimize the exposure to unnecessary user data and reduce the risk in case of data breaches via encryption."),(0,a.kt)("p",null,"The blindnet Encryption Engine gives all developers the ability to protect users\u2019 data (e.g., files, images, documents) in an easy and intuitive way."),(0,a.kt)("p",null,"It is a collection of libraries and Restful APIs intended for developers to implement data captures, their lifecycle management, and data rights management, in their own software."),(0,a.kt)("p",null,"The blindnet Encryption Engine is compatible with all available user authentication systems. The user experience does not change when you integrate the blindnet encryption engine."),(0,a.kt)("h3",{id:"what-it-does"},"What it does"),(0,a.kt)("p",null,"When using the blindnet EncryptionEngine in your application, the JavaScript client library encrypts and decrypts user data directly on user local machines (e.g, browsers or mobile phones), while managing the encryption keys in the background, along with:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Symmetric encryption of documents (e.g., files, images); document keys are randomly generated and transferred between users with asymmetric key encryption."),(0,a.kt)("li",{parentName:"ul"},"A password-based secure backup of user private keys, which allows users to access their data from different browsers. Thanks to our password splitting function your users still use only one password to access your system and to secure their private keys."),(0,a.kt)("li",{parentName:"ul"},"Data exchange between registered users of your application, and from unregistered to registered users."),(0,a.kt)("li",{parentName:"ul"},"End-to-end encryption: no one except senders and intended recipients can read the data.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Blindnet in web and mixed applications.",src:n(6435).Z,width:"985",height:"226"})),(0,a.kt)("h3",{id:"how-to-use-it"},"How to use it"),(0,a.kt)("p",null,"For a quick and easy introduction, check out the ",(0,a.kt)("a",{parentName:"p",href:"./quickstart"},"Quick Start")," guide."),(0,a.kt)("p",null,"Then, read the more detailed documentation section for more advanced usage."),(0,a.kt)(o.Z,{items:(0,s.jA)().items,mdxType:"DocCardList"}),(0,a.kt)("h3",{id:"what-is-the-difference-between-blindnetinittoken-and-blindnetconnectblindnetsecret"},"What is the difference between ",(0,a.kt)("inlineCode",{parentName:"h3"},"Blindnet.init(token)")," and ",(0,a.kt)("inlineCode",{parentName:"h3"},"blindnet.connect(blindnetSecret)")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/encryption/installation#client-sdk-2"},"Blindnet.init(token)")," is about initialising blindnet Encryption Engine itself, since blindnet API requires a JWT to authenticate the requests, and the ",(0,a.kt)("inlineCode",{parentName:"p"},"token")," passed as argument is actually the JWT that you ",(0,a.kt)("a",{parentName:"p",href:"/docs/encryption/managing_users_access#creating-user-tokens"},"generate on your backend"),". Instead of passing the token on each SDK function call, the SDK maintains the state and uses the token in each call to our API. This is why when the token expires you need to refresh it."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/encryption/managing_users_access#registering-and-logging-users-in-blindnet"},"blindnet.connect(blindnetSecret)")," is about logging your users to the blindnet encryption service. When this method is called, the SDK uses ",(0,a.kt)("inlineCode",{parentName:"p"},"blindnetSecret")," (argument to the connect function) to initiate the user's private keys, and then stores them to be used later when decrypting documents."),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"blindnet encryption engine")," consists of ",(0,a.kt)("strong",{parentName:"p"},"client-side")," and ",(0,a.kt)("strong",{parentName:"p"},"server-side")," libraries for different languages and platforms."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Server-side libraries")," are used mainly for user authentication in blindnet by providing the api to generate the ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#creating-user-tokens"},"authentication tokens"),". Additionally, you can use it to ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#deleting-users"},"delete users")," and ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#deleting-encrypted-data-keys"},"encryption keys")," of your application."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Client-side libraries")," are used for ",(0,a.kt)("a",{parentName:"p",href:"./encrypt"},"encryption")," and ",(0,a.kt)("a",{parentName:"p",href:"./decrypt"},"decryption")," of the data shared between users of your application. Other functionalities are e.g. ",(0,a.kt)("a",{parentName:"p",href:"./managing_users_access#giving-access-to-other-users"},"sharing")," the encrypted data with other users."),(0,a.kt)("p",null,"To integrate the blindnet encryption engine to your application, you need:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Yto integrate both ",(0,a.kt)("strong",{parentName:"li"},"client-side")," and ",(0,a.kt)("strong",{parentName:"li"},"server-side SDKs"),"."),(0,a.kt)("li",{parentName:"ol"},"You need a way to authenticate the users in your application. Users in blindnet are identified by a unique identifier which is ",(0,a.kt)("a",{parentName:"li",href:"./managing_users_access#creating-user-tokens"},"generated")," on your side. User's unique identifier is a part of the authentication token."),(0,a.kt)("li",{parentName:"ol"},"You need to maintain the ",(0,a.kt)("a",{parentName:"li",href:"/docs/references/glossary#session"},"authenticated sessions")," with blindnet on the client-side for every user using the blindnet api. A session is identified by an ",(0,a.kt)("a",{parentName:"li",href:"./managing_users_access#creating-user-tokens"},"authentication token")," generated by the ",(0,a.kt)("strong",{parentName:"li"},"server-side SDK")," and passed to the ",(0,a.kt)("strong",{parentName:"li"},"client-side"),". Tokens have an expiry time so make sure to generate new ones after they expire.")))}f.isMDXComponent=!0},6435:function(e,t,n){t.Z=n.p+"assets/images/web_enc_high-67472134721fec35a618871ae06a6aa1.svg"}}]);